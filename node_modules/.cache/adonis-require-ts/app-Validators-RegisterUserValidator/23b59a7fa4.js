"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Validator_1 = global[Symbol.for('ioc.use')]("Adonis/Core/Validator");
class RegisterUserValidator {
    constructor(ctx) {
        this.ctx = ctx;
        this.schema = Validator_1.schema.create({
            name: Validator_1.schema.string({}, [
                Validator_1.rules.required()
            ]),
            email: Validator_1.schema.string({}, [
                Validator_1.rules.required(),
                Validator_1.rules.email(),
                Validator_1.rules.unique({ table: 'users', column: 'email' })
            ]),
            password: Validator_1.schema.string({}, [
                Validator_1.rules.required(),
                Validator_1.rules.minLength(4)
            ])
        });
        this.messages = {
            required: "{{field}} é obrigatório para se registrar!!!",
            'email.unique': "E-mail já cadastrado!!",
            'minLength': "tamanho de senha inválido!"
        };
    }
}
exports.default = RegisterUserValidator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVnaXN0ZXJVc2VyVmFsaWRhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiUmVnaXN0ZXJVc2VyVmFsaWRhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsMkVBQXlFO0FBR3pFLE1BQXFCLHFCQUFxQjtJQUN4QyxZQUFzQixHQUF3QjtRQUF4QixRQUFHLEdBQUgsR0FBRyxDQUFxQjtRQXFCdkMsV0FBTSxHQUFHLGtCQUFNLENBQUMsTUFBTSxDQUFDO1lBQzVCLElBQUksRUFBRSxrQkFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUU7Z0JBQ3RCLGlCQUFLLENBQUMsUUFBUSxFQUFFO2FBQ2pCLENBQUM7WUFDRixLQUFLLEVBQUUsa0JBQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFO2dCQUN2QixpQkFBSyxDQUFDLFFBQVEsRUFBRTtnQkFDaEIsaUJBQUssQ0FBQyxLQUFLLEVBQUU7Z0JBQ2IsaUJBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxLQUFLLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQzthQUNsRCxDQUFDO1lBQ0YsUUFBUSxFQUFFLGtCQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRTtnQkFDMUIsaUJBQUssQ0FBQyxRQUFRLEVBQUU7Z0JBQ2hCLGlCQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQzthQUNuQixDQUFDO1NBQ0gsQ0FBQyxDQUFBO1FBYUssYUFBUSxHQUFtQjtZQUNoQyxRQUFRLEVBQUUsOENBQThDO1lBQ3hELGNBQWMsRUFBRSx3QkFBd0I7WUFDeEMsV0FBVyxFQUFFLDRCQUE0QjtTQUMxQyxDQUFBO0lBbkRpRCxDQUFDO0NBb0RwRDtBQXJERCx3Q0FxREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzY2hlbWEscnVsZXMsIEN1c3RvbU1lc3NhZ2VzIH0gZnJvbSAnQGlvYzpBZG9uaXMvQ29yZS9WYWxpZGF0b3InXG5pbXBvcnQgdHlwZSB7IEh0dHBDb250ZXh0Q29udHJhY3QgfSBmcm9tICdAaW9jOkFkb25pcy9Db3JlL0h0dHBDb250ZXh0J1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWdpc3RlclVzZXJWYWxpZGF0b3Ige1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY3R4OiBIdHRwQ29udGV4dENvbnRyYWN0KSB7IH1cblxuICAvKlxuICAgKiBEZWZpbmUgc2NoZW1hIHRvIHZhbGlkYXRlIHRoZSBcInNoYXBlXCIsIFwidHlwZVwiLCBcImZvcm1hdHRpbmdcIiBhbmQgXCJpbnRlZ3JpdHlcIiBvZiBkYXRhLlxuICAgKlxuICAgKiBGb3IgZXhhbXBsZTpcbiAgICogMS4gVGhlIHVzZXJuYW1lIG11c3QgYmUgb2YgZGF0YSB0eXBlIHN0cmluZy4gQnV0IHRoZW4gYWxzbywgaXQgc2hvdWxkXG4gICAqICAgIG5vdCBjb250YWluIHNwZWNpYWwgY2hhcmFjdGVycyBvciBudW1iZXJzLlxuICAgKiAgICBgYGBcbiAgICogICAgIHNjaGVtYS5zdHJpbmcoe30sIFsgcnVsZXMuYWxwaGEoKSBdKVxuICAgKiAgICBgYGBcbiAgICpcbiAgICogMi4gVGhlIGVtYWlsIG11c3QgYmUgb2YgZGF0YSB0eXBlIHN0cmluZywgZm9ybWF0dGVkIGFzIGEgdmFsaWRcbiAgICogICAgZW1haWwuIEJ1dCBhbHNvLCBub3QgdXNlZCBieSBhbnkgb3RoZXIgdXNlci5cbiAgICogICAgYGBgXG4gICAqICAgICBzY2hlbWEuc3RyaW5nKHt9LCBbXG4gICAqICAgICAgIHJ1bGVzLmVtYWlsKCksXG4gICAqICAgICAgIHJ1bGVzLnVuaXF1ZSh7IHRhYmxlOiAndXNlcnMnLCBjb2x1bW46ICdlbWFpbCcgfSksXG4gICAqICAgICBdKVxuICAgKiAgICBgYGBcbiAgICovXG4gIHB1YmxpYyBzY2hlbWEgPSBzY2hlbWEuY3JlYXRlKHtcbiAgICBuYW1lOiBzY2hlbWEuc3RyaW5nKHt9LCBbXG4gICAgICBydWxlcy5yZXF1aXJlZCgpXG4gICAgXSksXG4gICAgZW1haWw6IHNjaGVtYS5zdHJpbmcoe30sIFtcbiAgICAgIHJ1bGVzLnJlcXVpcmVkKCksXG4gICAgICBydWxlcy5lbWFpbCgpLFxuICAgICAgcnVsZXMudW5pcXVlKHsgdGFibGU6ICd1c2VycycsIGNvbHVtbjogJ2VtYWlsJyB9KVxuICAgIF0pLFxuICAgIHBhc3N3b3JkOiBzY2hlbWEuc3RyaW5nKHt9LCBbXG4gICAgICBydWxlcy5yZXF1aXJlZCgpLFxuICAgICAgcnVsZXMubWluTGVuZ3RoKDQpXG4gICAgXSlcbiAgfSlcblxuICAvKipcbiAgICogQ3VzdG9tIG1lc3NhZ2VzIGZvciB2YWxpZGF0aW9uIGZhaWx1cmVzLiBZb3UgY2FuIG1ha2UgdXNlIG9mIGRvdCBub3RhdGlvbiBgKC4pYFxuICAgKiBmb3IgdGFyZ2V0aW5nIG5lc3RlZCBmaWVsZHMgYW5kIGFycmF5IGV4cHJlc3Npb25zIGAoKilgIGZvciB0YXJnZXRpbmcgYWxsXG4gICAqIGNoaWxkcmVuIG9mIGFuIGFycmF5LiBGb3IgZXhhbXBsZTpcbiAgICpcbiAgICoge1xuICAgKiAgICdwcm9maWxlLnVzZXJuYW1lLnJlcXVpcmVkJzogJ1VzZXJuYW1lIGlzIHJlcXVpcmVkJyxcbiAgICogICAnc2NvcmVzLioubnVtYmVyJzogJ0RlZmluZSBzY29yZXMgYXMgdmFsaWQgbnVtYmVycydcbiAgICogfVxuICAgKlxuICAgKi9cbiAgcHVibGljIG1lc3NhZ2VzOiBDdXN0b21NZXNzYWdlcyA9IHtcbiAgICByZXF1aXJlZDogXCJ7e2ZpZWxkfX0gw6kgb2JyaWdhdMOzcmlvIHBhcmEgc2UgcmVnaXN0cmFyISEhXCIsXG4gICAgJ2VtYWlsLnVuaXF1ZSc6IFwiRS1tYWlsIGrDoSBjYWRhc3RyYWRvISFcIixcbiAgICAnbWluTGVuZ3RoJzogXCJ0YW1hbmhvIGRlIHNlbmhhIGludsOhbGlkbyFcIlxuICB9XG59XG4iXX0=